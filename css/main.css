body, html{
    margin: 0;
    padding: 0;
}
.grid-container{
    display: grid;
    background: #ffddff;
    /* grid-row-gap: 10px; */
    grid-template-columns: auto auto auto auto;
    grid-template-rows: 20% 20% 20% 20%;
    /* justify-content: space-between; */
    align-content: start;
    height: 600px;
}

.grid-item{
    padding: 20px;
    border: 1px solid black;
    margin: 5px;
    font-size: 20px;
    text-align: center;
}
#grid-1{
    /* Make "#grid-1" start on column 1 and span 3 columns: */
    grid-column: 1/span 3;

/*  
    Make "item2" start on column 2 and span 3 columns
    grid-column: 2 / span 3;
*/
}

/* #grid-3{
    grid-column-start: 3;
    grid-column-end: 5;
}
*/

#grid-4{
    grid-row: 2 / span 2;
    /* The grid-row property is a shorthand property for the grid-row-start and the grid-row-end properties.*/
    
    /* (line by which you wanna start from) / (how many row you wanna span it)  */

    /* Example: 
        Make "grid-4" start on row 1 and span 2 rows:
        grid-row: 1 / span 2;
    */
}  

/* 
    we give "grid-area" property to a particular element, the element which we want to expand column wise or row wise or both..

    The syntax is grid-row-start / grid-column-start / grid-row-end / grid-column-end.

    e.g: grid-area: 2 / 1 / span 2 / span 3;

    and grid-area: 1 / 2 / 5 / 6;

    The grid-area Property
    The grid-area property can be used as a shorthand property for the grid-row-start, grid-column-start, grid-row-end and the grid-column-end properties. 
*/